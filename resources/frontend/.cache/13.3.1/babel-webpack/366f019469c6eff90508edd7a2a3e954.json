{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ColoniasService = /*#__PURE__*/(() => {\n  class ColoniasService {\n    constructor(http) {\n      this.http = http;\n      this.url_catalogos = `${environment.base_url}/catalogos`;\n      this.url_catalogosMunicipio = `${environment.base_url}/catalogo-municipio`;\n      this.url_catalogosLocalidad = `${environment.base_url}/catalogo-localidad`;\n      this.url = `${environment.base_url}/colonias`;\n    }\n\n    getCatalogos() {\n      return this.http.get(this.url_catalogos, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getColonias(params) {\n      return this.http.get(this.url, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getCatalogosMunicipio(distrito) {\n      return this.http.get(this.url_catalogosMunicipio + \"/\" + distrito, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    buscarLocalidad(obj) {\n      return this.http.get(this.url_catalogosLocalidad, {\n        params: obj\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    saveColonias(payload) {\n      return this.http.post(this.url, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    editColonias(id, payload) {\n      return this.http.put(this.url + \"/\" + id, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    eliminarColonia(id) {\n      return this.http.delete(this.url + \"/\" + id).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getColonia(id) {\n      return this.http.get(this.url + \"/\" + id, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n  }\n\n  ColoniasService.ɵfac = function ColoniasService_Factory(t) {\n    return new (t || ColoniasService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ColoniasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ColoniasService,\n    factory: ColoniasService.ɵfac,\n    providedIn: 'root'\n  });\n  return ColoniasService;\n})();","map":null,"metadata":{},"sourceType":"module"}