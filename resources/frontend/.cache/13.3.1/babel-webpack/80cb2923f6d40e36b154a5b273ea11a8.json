{"ast":null,"code":"import { APPS } from '../apps-list/apps';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./auth.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authService) {\n      this.router = router;\n      this.authService = authService;\n    }\n\n    canActivate(next, state) {\n      if (!this.authService.getToken()) {\n        this.router.navigateByUrl('/login');\n        return false;\n      } else {\n        let userApp = {\n          children: APPS\n        };\n\n        for (let i in next.url) {\n          let appIndex = userApp.children.findIndex(item => item.route == next.url[i].path);\n\n          if (appIndex >= 0) {\n            userApp = userApp.children[appIndex];\n\n            if (!userApp.children) {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n\n        if (userApp.permission) {\n          let userPermissions = JSON.parse(localStorage.getItem('permissions'));\n\n          if (!userPermissions[userApp.permission]) {\n            this.router.navigateByUrl('/sin-permiso');\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n\n    canLoad(route) {\n      if (!this.authService.getToken()) {\n        this.router.navigateByUrl('/login');\n        return false;\n      }\n\n      return true;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}