{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators, FormControl } from '@angular/forms';\nimport { combineLatest, of } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../roles.service\";\nimport * as i2 from \"../../permissions/permissions.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/list\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"@angular/flex-layout/extended\";\nimport * as i15 from \"@angular/material/divider\";\nimport * as i16 from \"@angular/material/chips\";\n\nfunction FormComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Editar\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Nuevo\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormComponent_div_6_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction FormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, FormComponent_div_6_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isLoading);\n  }\n}\n\nfunction FormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"No se encontraron los datos del rol\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormComponent_mat_error_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, FormComponent_mat_error_13_span_1_Template, 2, 0, \"span\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.rolForm.get(\"name\").errors.required);\n  }\n}\n\nfunction FormComponent_mat_icon_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 21);\n    i0.ɵɵtext(1, \"filter_list\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function FormComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.clearPermissionSearch();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"clear\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction FormComponent_mat_list_option_19_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 27);\n    i0.ɵɵtext(1, \"vpn_key\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormComponent_mat_list_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-option\", 23);\n    i0.ɵɵlistener(\"click\", function FormComponent_mat_list_option_19_Template_mat_list_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const permission_r14 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.selectPermission(permission_r14);\n    });\n    i0.ɵɵtemplate(1, FormComponent_mat_list_option_19_mat_icon_1_Template, 2, 0, \"mat-icon\", 24);\n    i0.ɵɵelementStart(2, \"p\", 25)(3, \"span\", 26);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(7, \"mat-divider\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const permission_r14 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", permission_r14)(\"selected\", ctx_r7.selectedItems[permission_r14.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", permission_r14.is_super);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"[\", permission_r14.group, \"]\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", permission_r14.description, \" \");\n  }\n}\n\nfunction FormComponent_mat_chip_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 28);\n    i0.ɵɵlistener(\"removed\", function FormComponent_mat_chip_26_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const i_r19 = restoredCtx.index;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.removePermission(i_r19);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 29);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const permission_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"color\", \"accent\")(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", permission_r18.description, \" \");\n  }\n}\n\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    constructor(rolesService, permissionsService, dialogRef, fb, data) {\n      this.rolesService = rolesService;\n      this.permissionsService = permissionsService;\n      this.dialogRef = dialogRef;\n      this.fb = fb;\n      this.data = data;\n      this.isLoading = false;\n      this.rol = {};\n      this.catalogPermissions = [];\n      this.filterInput = new FormControl('');\n      this.filterInput$ = this.filterInput.valueChanges.pipe(startWith(''));\n      this.selectedPermissions = [];\n      this.selectedItems = {};\n      this.rolForm = this.fb.group({\n        'name': ['', [Validators.required]],\n        'permissions': [[], [Validators.required]]\n      });\n    }\n\n    ngOnInit() {\n      this.permissionsService.getAllPermissions().subscribe(response => {\n        this.catalogPermissions = response.data;\n        this.listOfPermissions$ = of(this.catalogPermissions);\n        this.filteredPermissions$ = combineLatest(this.listOfPermissions$, this.filterInput$).pipe(map(([permissions, filterString]) => permissions.filter(permission => permission.description.toLowerCase().indexOf(filterString.toLocaleLowerCase()) !== -1 || permission.group.toLowerCase().indexOf(filterString.toLocaleLowerCase()) !== -1)));\n      });\n      let id = this.data.id;\n\n      if (id) {\n        this.isLoading = true;\n        this.rolesService.getRole(id).subscribe(response => {\n          this.rol = response.data;\n          this.rolForm.patchValue(this.rol);\n          this.selectedPermissions = this.rol.permissions;\n\n          for (let i in this.selectedPermissions) {\n            this.selectedItems[this.selectedPermissions[i].id] = true;\n          }\n\n          this.isLoading = false;\n        });\n      }\n    }\n\n    clearPermissionSearch() {\n      this.filterInput.setValue('');\n    }\n\n    removePermission(index) {\n      let permission = this.selectedPermissions[index];\n      this.selectedPermissions.splice(index, 1);\n      this.selectedItems[permission.id] = false;\n      this.rolForm.get('permissions').patchValue(this.selectedPermissions);\n    }\n\n    selectPermission(permission) {\n      if (!this.selectedItems[permission.id]) {\n        this.selectedPermissions.push(permission);\n        this.selectedItems[permission.id] = true;\n        this.rolForm.get('permissions').patchValue(this.selectedPermissions);\n      } else {\n        let permissionIndex = this.selectedPermissions.findIndex(item => item.id == permission.id);\n        this.removePermission(permissionIndex);\n      }\n    }\n\n    saveRole() {\n      this.isLoading = true;\n\n      if (this.rol.id) {\n        this.rolesService.updateRole(this.rol.id, this.rolForm.value).subscribe(response => {\n          this.dialogRef.close(true);\n          console.log(response);\n          this.isLoading = false;\n        }, errorResponse => {\n          console.log(errorResponse);\n          this.isLoading = false;\n        });\n      } else {\n        this.rolesService.createRole(this.rolForm.value).subscribe(response => {\n          this.dialogRef.close(true);\n          console.log(response);\n          this.isLoading = false;\n        }, errorResponse => {\n          console.log(errorResponse);\n          this.isLoading = false;\n        });\n      }\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  FormComponent.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.RolesService), i0.ɵɵdirectiveInject(i2.PermissionsService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  FormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    decls: 35,\n    vars: 14,\n    consts: [[\"mat-dialog-title\", \"\"], [4, \"ngIf\"], [1, \"form-container\", 3, \"formGroup\"], [\"class\", \"form-loading-shade\", 4, \"ngIf\"], [\"fxLayout\", \"row\"], [\"fxFlex\", \"49\", \"fxFlex.xs\", \"100\"], [\"matInput\", \"\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Nombre\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Filtrar Permisos\", \"aria-label\", \"filtrar\", 3, \"formControl\"], [\"matSuffix\", \"\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Clean Permission Search\", 3, \"click\", 4, \"ngIf\"], [\"dense\", \"\", 1, \"permissions-list\"], [3, \"value\", \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"fxFlex\", \"\"], [\"fxFlex\", \"49\", \"fxFlex.xs\", \"100\", \"fxHide.xs\", \"true\"], [\"aria-label\", \"Permisos Seleccionados\"], [\"chipList\", \"\"], [3, \"color\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"end\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [1, \"form-loading-shade\"], [\"matSuffix\", \"\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Clean Permission Search\", 3, \"click\"], [3, \"value\", \"selected\", \"click\"], [\"matListIcon\", \"\", 4, \"ngIf\"], [\"matLine\", \"\"], [\"fxHide.xs\", \"true\"], [\"matListIcon\", \"\"], [3, \"color\", \"removable\", \"removed\"], [\"matChipRemove\", \"\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtemplate(1, FormComponent_span_1_Template, 2, 0, \"span\", 1);\n        i0.ɵɵtemplate(2, FormComponent_span_2_Template, 2, 0, \"span\", 1);\n        i0.ɵɵtext(3, \" Rol\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\")(5, \"div\", 2);\n        i0.ɵɵtemplate(6, FormComponent_div_6_Template, 2, 1, \"div\", 3);\n        i0.ɵɵtemplate(7, FormComponent_div_7_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵtemplate(13, FormComponent_mat_error_13_Template, 2, 1, \"mat-error\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\");\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵtemplate(16, FormComponent_mat_icon_16_Template, 2, 0, \"mat-icon\", 8);\n        i0.ɵɵtemplate(17, FormComponent_button_17_Template, 3, 0, \"button\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-selection-list\", 10);\n        i0.ɵɵtemplate(19, FormComponent_mat_list_option_19_Template, 8, 5, \"mat-list-option\", 11);\n        i0.ɵɵpipe(20, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"div\", 12);\n        i0.ɵɵelementStart(22, \"div\", 13)(23, \"mat-form-field\")(24, \"mat-chip-list\", 14, 15);\n        i0.ɵɵtemplate(26, FormComponent_mat_chip_26_Template, 4, 3, \"mat-chip\", 16);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(27, \"mat-divider\");\n        i0.ɵɵelementStart(28, \"mat-dialog-actions\", 17)(29, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_29_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(30, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_31_listener() {\n          return ctx.saveRole();\n        });\n        i0.ɵɵelementStart(32, \"mat-icon\");\n        i0.ɵɵtext(33, \"save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34, \" Guardar\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.rol.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.rol.id);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.rolForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && !ctx.rol);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.rolForm.get(\"name\").invalid && (ctx.rolForm.get(\"name\").dirty || ctx.rolForm.get(\"name\").touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.filterInput);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.filterInput.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterInput.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 12, ctx.filteredPermissions$));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectedPermissions);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.rolForm.invalid || ctx.isLoading);\n      }\n    },\n    directives: [i3.MatDialogTitle, i5.NgIf, i3.MatDialogContent, i4.NgControlStatusGroup, i4.FormGroupDirective, i6.MatSpinner, i7.DefaultLayoutDirective, i7.DefaultFlexDirective, i8.MatFormField, i9.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.RequiredValidator, i8.MatError, i4.FormControlDirective, i10.MatIcon, i8.MatSuffix, i11.MatButton, i12.MatSelectionList, i5.NgForOf, i12.MatListOption, i12.MatListIconCssMatStyler, i13.MatLine, i14.DefaultShowHideDirective, i15.MatDivider, i16.MatChipList, i16.MatChip, i16.MatChipRemove, i3.MatDialogActions],\n    pipes: [i5.AsyncPipe],\n    styles: [\".form-container[_ngcontent-%COMP%]{position:relative;min-height:200px;display:flex;flex-direction:column;padding:10px}.mat-form-field[_ngcontent-%COMP%]{width:100%}.form-table-container[_ngcontent-%COMP%]{position:relative;max-height:400px;overflow:auto}.form-loading-shade[_ngcontent-%COMP%]{position:absolute;top:0;left:0;bottom:0;right:0;background:rgba(0,0,0,.15);z-index:1;display:flex;align-items:center;justify-content:center}.form-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}.eit-right-align[_ngcontent-%COMP%]{text-align:right}input.eit-right-align[_ngcontent-%COMP%]::-webkit-outer-spin-button, input.eit-right-align[_ngcontent-%COMP%]::-webkit-inner-spin-button{display:none}input.eit-right-align[_ngcontent-%COMP%]{-moz-appearance:textfield}.permissions-list[_ngcontent-%COMP%]{overflow:auto;height:250px}\"]\n  });\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}