{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GruposService = /*#__PURE__*/(() => {\n  class GruposService {\n    //url_cat_tipo_profesion = `${environment.base_url}/catalogo-tipo-profesion`;\n    constructor(http) {\n      this.http = http;\n      this.url = `${environment.base_url}/grupos_unidades`;\n      this.url_empleados = `${environment.base_url}/listado-empleados`;\n    }\n\n    obtenerListaGrupos(payload) {\n      return this.http.get(this.url, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    obtenerListaEmpleados(payload) {\n      return this.http.get(this.url_empleados, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    verDatosGrupo(id) {\n      return this.http.get(this.url + '/' + id).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    actualizarGrupo(id, form) {\n      return this.http.put(this.url + \"/\" + id, form).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    crearGrupo(form) {\n      return this.http.post(this.url, form).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    eliminarGrupo(id) {\n      return this.http.delete(this.url + \"/\" + id).pipe(map(response => {\n        return response;\n      }));\n    }\n\n  }\n\n  GruposService.ɵfac = function GruposService_Factory(t) {\n    return new (t || GruposService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GruposService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GruposService,\n    factory: GruposService.ɵfac,\n    providedIn: 'root'\n  });\n  return GruposService;\n})();","map":null,"metadata":{},"sourceType":"module"}