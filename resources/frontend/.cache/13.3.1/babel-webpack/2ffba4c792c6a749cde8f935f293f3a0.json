{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators } from '@angular/forms';\nimport { SelectorCrDialogComponent } from '../../../utils/selector-cr-dialog/selector-cr-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../shared/shared.service\";\nimport * as i4 from \"../grupos.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/checkbox\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/chips\";\nimport * as i14 from \"@angular/material/tooltip\";\n\nfunction FormularioComponent_div_4_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction FormularioComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, FormularioComponent_div_4_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoading);\n  }\n}\n\nfunction FormularioComponent_mat_error_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"La descripci\\u00F3n es obligatoria\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormularioComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, FormularioComponent_mat_error_8_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.grupoForm.get(\"descripcion\").errors.required);\n  }\n}\n\nfunction FormularioComponent_mat_chip_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", item_r5.descripcion);\n    i0.ɵɵproperty(\"removable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5.cr, \" \");\n  }\n}\n\nexport let FormularioComponent = /*#__PURE__*/(() => {\n  class FormularioComponent {\n    constructor(dialogRef, data, fb, sharedService, gruposService, dialog) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.fb = fb;\n      this.sharedService = sharedService;\n      this.gruposService = gruposService;\n      this.dialog = dialog;\n      this.isSaving = false;\n      this.isLoading = false;\n      this.grupoForm = this.fb.group({\n        'descripcion': ['', [Validators.required]],\n        'finalizado': ['']\n      });\n    }\n\n    ngOnInit() {\n      this.isLoading = true;\n\n      if (this.data.id) {\n        this.grupoId = this.data.id;\n        this.tituloDialogo = 'Editar';\n        this.gruposService.verDatosGrupo(this.grupoId).subscribe(response => {\n          console.log(response);\n\n          if (response.error) {\n            let errorMessage = response.error.message;\n            this.sharedService.showSnackBar(errorMessage, null, 3000);\n          } else {\n            this.grupoForm.patchValue(response.data);\n            this.listaCRs = response.data.lista_c_r;\n          }\n\n          this.isLoading = false;\n        }, errorResponse => {\n          var errorMessage = \"Ocurrió un error.\";\n\n          if (errorResponse.status == 409) {\n            errorMessage = errorResponse.error.message;\n          }\n\n          this.sharedService.showSnackBar(errorMessage, null, 3000);\n          this.isLoading = false;\n        });\n      } else {\n        this.isLoading = false;\n        this.tituloDialogo = 'Nuevo';\n      }\n    }\n\n    cancel() {\n      this.dialogRef.close();\n    }\n\n    agregarCR() {\n      const dialogRef = this.dialog.open(SelectorCrDialogComponent, {});\n      dialogRef.afterClosed().subscribe(valid => {\n        if (valid) {\n          console.log('Aceptar');\n        } else {\n          console.log('Cancelar');\n        }\n      });\n    }\n\n    obtenerListadoEmpleados() {\n      let params = {\n        //mode:'grouped',\n        //grouped_by:'clues',\n        //mode:'paginated',\n        //page:5,\n        //per_page:10,\n        mode: 'plain-list',\n        //grupos: this.data.id,\n        order: 'clues|rfc',\n        order_type: 'ASC',\n        //clues: 'CSSSA001|CSSSA002',\n        //cr: '07000|070001',\n        //estatus: '1|2|3',\n        validado: 1\n      };\n      this.gruposService.obtenerListaEmpleados(params).subscribe(response => {\n        if (response.error) {\n          let errorMessage = response.error.message;\n          this.sharedService.showSnackBar(errorMessage, null, 3000);\n        } else {\n          console.log(response);\n        }\n\n        this.isLoading = false;\n      }, errorResponse => {\n        var errorMessage = \"Ocurrió un error.\";\n\n        if (errorResponse.status == 409) {\n          errorMessage = errorResponse.error.message;\n        }\n\n        this.sharedService.showSnackBar(errorMessage, null, 3000);\n        this.isLoading = false;\n      });\n    }\n\n    guardar() {\n      if (this.grupoForm.valid) {\n        this.isSaving = true;\n\n        if (this.grupoId) {\n          this.gruposService.actualizarGrupo(this.grupoId, this.grupoForm.value).subscribe(response => {\n            console.log(response);\n            this.isSaving = false;\n\n            if (response.error) {\n              let errorMessage = response.error.message;\n              this.sharedService.showSnackBar(errorMessage, null, 3000);\n            } else {\n              console.log('Grupo editado');\n              this.dialogRef.close(true);\n            } //this.isLoading = false;\n\n          }, errorResponse => {\n            this.isSaving = false;\n            var errorMessage = \"Ocurrió un error.\";\n\n            if (errorResponse.status == 409) {\n              errorMessage = errorResponse.error.message;\n            }\n\n            this.sharedService.showSnackBar(errorMessage, null, 3000); //this.isLoading = false;\n          });\n        } else {\n          this.gruposService.crearGrupo(this.grupoForm.value).subscribe(response => {\n            console.log(response);\n            this.isSaving = false;\n\n            if (response.error) {\n              let errorMessage = response.error.message;\n              this.sharedService.showSnackBar(errorMessage, null, 3000);\n            } else {\n              console.log('Grupo creado');\n              this.dialogRef.close(true);\n            } //this.isLoading = false;\n\n          }, errorResponse => {\n            this.isSaving = false;\n            var errorMessage = \"Ocurrió un error.\";\n\n            if (errorResponse.status == 409) {\n              errorMessage = errorResponse.error.message;\n            }\n\n            this.sharedService.showSnackBar(errorMessage, null, 3000); //this.isLoading = false;\n          });\n        } //this.dialogRef.close(true);\n\n      }\n    }\n\n  }\n\n  FormularioComponent.ɵfac = function FormularioComponent_Factory(t) {\n    return new (t || FormularioComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i4.GruposService), i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n\n  FormularioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormularioComponent,\n    selectors: [[\"app-formulario\"]],\n    decls: 28,\n    vars: 9,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"form-container\", 3, \"formGroup\"], [\"class\", \"loading-shade\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\"], [\"fxFlex\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Descrici\\u00F3n\", \"formControlName\", \"descripcion\", \"cdkFocusInitial\", \"\", \"required\", \"\", \"autocomplete\", \"off\", 3, \"type\", \"keyup.enter\"], [4, \"ngIf\"], [\"fxLayout\", \"row\"], [1, \"checkbox-section\"], [\"formControlName\", \"finalizado\"], [\"fxFlex\", \"none\"], [\"mat-raised-button\", \"\", \"color\", \"info\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", 2, \"min-height\", \"80px\", \"max-height\", \"300px\", \"overflow\", \"hidden\", \"overflow-y\", \"auto\"], [\"aria-label\", \"Fish selection\"], [3, \"removable\", \"matTooltip\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [1, \"loading-shade\"], [3, \"removable\", \"matTooltip\"]],\n    template: function FormularioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵtemplate(4, FormularioComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"mat-form-field\", 5)(7, \"input\", 6);\n        i0.ɵɵlistener(\"keyup.enter\", function FormularioComponent_Template_input_keyup_enter_7_listener() {\n          return ctx.guardar();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, FormularioComponent_mat_error_8_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 5)(11, \"section\", 9)(12, \"mat-checkbox\", 10);\n        i0.ɵɵtext(13, \"Captura Finalizada\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function FormularioComponent_Template_button_click_15_listener() {\n          return ctx.agregarCR();\n        });\n        i0.ɵɵelementStart(16, \"mat-icon\");\n        i0.ɵɵtext(17, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" Agregar CR\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 13)(20, \"mat-chip-list\", 14);\n        i0.ɵɵtemplate(21, FormularioComponent_mat_chip_21_Template, 2, 3, \"mat-chip\", 15);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"div\", 16);\n        i0.ɵɵelement(23, \"span\", 5);\n        i0.ɵɵelementStart(24, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function FormularioComponent_Template_button_click_24_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(25, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function FormularioComponent_Template_button_click_26_listener() {\n          return ctx.guardar();\n        });\n        i0.ɵɵtext(27, \"Guardar\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.tituloDialogo, \" Grupo \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.grupoForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"type\", \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grupoForm.get(\"descripcion\").invalid && (ctx.grupoForm.get(\"descripcion\").dirty || ctx.grupoForm.get(\"descripcion\").touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listaCRs);\n        i0.ɵɵadvance(5);\n        i0.ɵɵclassProp(\"button-spinner\", ctx.isSaving);\n        i0.ɵɵproperty(\"disabled\", !ctx.grupoForm.valid);\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i2.NgControlStatusGroup, i2.FormGroupDirective, i5.NgIf, i6.MatSpinner, i7.DefaultLayoutDirective, i8.MatFormField, i7.DefaultFlexDirective, i9.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i8.MatError, i10.MatCheckbox, i11.MatButton, i12.MatIcon, i13.MatChipList, i5.NgForOf, i13.MatChip, i14.MatTooltip, i1.MatDialogActions],\n    styles: [\".form-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}.loading-shade[_ngcontent-%COMP%]{position:absolute;top:0;left:0;bottom:0;right:0;background:rgba(0,0,0,.15);z-index:99999;display:flex;align-items:center;justify-content:center}.loading-shade[_ngcontent-%COMP%]   mat-spinner[_ngcontent-%COMP%]{margin:0 auto}.loading-shade[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin:0 auto}.checkbox-section[_ngcontent-%COMP%]{display:flex;align-content:center;align-items:center;height:60px;margin:0 10px}\"]\n  });\n  return FormularioComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}