{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CluesService = /*#__PURE__*/(() => {\n  class CluesService {\n    constructor(http) {\n      this.http = http;\n      this.url = `${environment.base_url}/clues`;\n      this.url_obtener_catalogos = `${environment.base_url}/catalogos`;\n      this.url_responsable = `${environment.base_url}/busqueda-responsable`;\n      this.url_info_clue = `${environment.base_url}/ver-info-clue/`;\n      this.url_clue_catalogo = `${environment.base_url}/busqueda-clues`;\n      this.url_localidad = `${environment.base_url}/localidad`;\n    }\n\n    getCluesList(payload) {\n      return this.http.get(this.url, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    verInfoClue(id, payload) {\n      return this.http.get(this.url_info_clue + id, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    obtenerCatalogos(payload = null) {\n      return this.http.get(this.url_obtener_catalogos, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    actualizarClues(id, form) {\n      return this.http.put(this.url + \"/\" + id, form).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    obtenerDatosClues(id, payload) {\n      return this.http.get(this.url + \"/\" + id, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    buscarResponsable(payload) {\n      return this.http.get(this.url_responsable, {\n        params: payload\n      }).pipe(map(response => {\n        return response.data;\n      }));\n    }\n\n    buscarClue(payload) {\n      return this.http.get(this.url_clue_catalogo, {\n        params: payload\n      }).pipe(map(response => {\n        return response.data;\n      }));\n    }\n\n    obtenerLocalidades(payload) {\n      return this.http.get(this.url_localidad, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n  }\n\n  CluesService.ɵfac = function CluesService_Factory(t) {\n    return new (t || CluesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CluesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CluesService,\n    factory: CluesService.ɵfac,\n    providedIn: 'root'\n  });\n  return CluesService;\n})();","map":null,"metadata":{},"sourceType":"module"}