{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport let SharedService = /*#__PURE__*/(() => {\n  class SharedService {\n    constructor(snackBar) {\n      this.snackBar = snackBar;\n    }\n\n    showSnackBar(message, action, duration) {\n      this.snackBar.open(message, action, {\n        duration: duration\n      });\n    }\n\n    newCurrentApp(name) {\n      let newApp = {\n        name: name,\n        data: {}\n      };\n      localStorage.setItem('currentApp', JSON.stringify(newApp));\n    }\n\n    getCurrentApp() {\n      let currentApp = JSON.parse(localStorage.getItem('currentApp'));\n\n      if (!currentApp) {\n        currentApp = {\n          name: ''\n        };\n      }\n\n      return currentApp;\n    }\n\n    getArrayDataFromCurrentApp(keys) {\n      let appData = {};\n      let currentAppData = JSON.parse(localStorage.getItem('currentApp'));\n\n      for (let i in keys) {\n        if (currentAppData.data[keys[i]]) {\n          appData[keys[i]] = currentAppData.data[keys[i]];\n        } else {\n          appData[keys[i]] = undefined;\n        }\n      }\n\n      return appData;\n    }\n\n    getDataFromCurrentApp(key) {\n      let currentApp = JSON.parse(localStorage.getItem('currentApp'));\n\n      if (currentApp) {\n        return currentApp.data[key];\n      } else {\n        return {};\n      }\n    }\n\n    setDataToCurrentApp(key, data) {\n      let currentApp = JSON.parse(localStorage.getItem('currentApp'));\n\n      if (currentApp) {\n        currentApp.data[key] = data;\n      }\n\n      localStorage.setItem('currentApp', JSON.stringify(currentApp));\n    }\n\n  }\n\n  SharedService.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)(i0.ɵɵinject(i1.MatSnackBar));\n  };\n\n  SharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: 'root'\n  });\n  return SharedService;\n})();","map":null,"metadata":{},"sourceType":"module"}