{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction ConfirmActionDialogComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\n\nfunction ConfirmActionDialogComponent_div_4_mat_error_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"El texto de confirmaci\\u00F3n es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ConfirmActionDialogComponent_div_4_mat_error_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"El texto debe coincidir\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ConfirmActionDialogComponent_div_4_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ConfirmActionDialogComponent_div_4_mat_error_3_span_1_Template, 2, 0, \"span\", 2);\n    i0.ɵɵtemplate(2, ConfirmActionDialogComponent_div_4_mat_error_3_span_2_Template, 2, 0, \"span\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.confirmForm.get(\"confirm-text\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.confirmForm.get(\"confirm-text\").errors.pattern);\n  }\n}\n\nfunction ConfirmActionDialogComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"mat-form-field\")(2, \"input\", 9);\n    i0.ɵɵlistener(\"keyup.enter\", function ConfirmActionDialogComponent_div_4_Template_input_keyup_enter_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.confirm();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ConfirmActionDialogComponent_div_4_mat_error_3_Template, 3, 2, \"mat-error\", 2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.confirmForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"type\", \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.confirmForm.get(\"confirm-text\").invalid && (ctx_r1.confirmForm.get(\"confirm-text\").dirty || ctx_r1.confirmForm.get(\"confirm-text\").touched));\n  }\n}\n\nexport let ConfirmActionDialogComponent = /*#__PURE__*/(() => {\n  class ConfirmActionDialogComponent {\n    constructor(dialogRef, data, fb) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.fb = fb;\n      this.title = 'Confirmar Acción';\n      this.color = 'primary';\n      this.btnText = 'Continuar';\n    }\n\n    ngOnInit() {\n      this.validationString = this.data.validationString || undefined;\n\n      if (this.validationString) {\n        this.checkValue = true;\n      } else {\n        this.checkValue = false;\n      }\n\n      this.title = this.data.dialogTitle || undefined;\n      this.message = this.data.dialogMessage || undefined;\n      this.color = this.data.btnColor || undefined;\n      this.btnText = this.data.btnText || undefined;\n      this.confirmForm = this.fb.group({\n        'confirm-text': ['', [Validators.required, Validators.pattern(this.validationString)]]\n      });\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n    confirm() {\n      if (this.confirmForm.valid) {\n        this.dialogRef.close(true);\n      }\n    }\n\n  }\n\n  ConfirmActionDialogComponent.ɵfac = function ConfirmActionDialogComponent_Factory(t) {\n    return new (t || ConfirmActionDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  ConfirmActionDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfirmActionDialogComponent,\n    selectors: [[\"confirm-action-dialog\"]],\n    decls: 11,\n    vars: 7,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [4, \"ngIf\"], [\"class\", \"form-container\", 3, \"formGroup\", 4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"fxFlex\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", 3, \"mat-dialog-close\", \"disabled\", \"color\"], [1, \"form-container\", 3, \"formGroup\"], [\"matInput\", \"\", \"id\", \"confirm-text\", \"formControlName\", \"confirm-text\", \"cdkFocusInitial\", \"\", \"required\", \"\", 3, \"type\", \"keyup.enter\"]],\n    template: function ConfirmActionDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtemplate(3, ConfirmActionDialogComponent_p_3_Template, 2, 1, \"p\", 2);\n        i0.ɵɵtemplate(4, ConfirmActionDialogComponent_div_4_Template, 4, 3, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ConfirmActionDialogComponent_Template_button_click_7_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(8, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.title, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkValue);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"color\", ctx.color);\n        i0.ɵɵproperty(\"mat-dialog-close\", true)(\"disabled\", ctx.checkValue && !ctx.confirmForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.btnText);\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i3.NgIf, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.MatFormField, i5.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i4.MatError, i1.MatDialogActions, i6.DefaultFlexDirective, i7.MatButton, i1.MatDialogClose],\n    styles: [\".form-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return ConfirmActionDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}