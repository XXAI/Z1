{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PermissionsService = /*#__PURE__*/(() => {\n  class PermissionsService {\n    constructor(http) {\n      this.http = http;\n      this.url = `${environment.base_url}/permission`;\n    }\n\n    getPermissionList(payload) {\n      return this.http.get(this.url, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getAllPermissions() {\n      return this.http.get(this.url, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getPermission(id) {\n      return this.http.get(this.url + '/' + id, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    updatePermission(id, payload) {\n      return this.http.put(this.url + '/' + id, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    createPermission(payload) {\n      return this.http.post(this.url, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    deletePermission(id) {\n      return this.http.delete(this.url + '/' + id, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n  }\n\n  PermissionsService.ɵfac = function PermissionsService_Factory(t) {\n    return new (t || PermissionsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PermissionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PermissionsService,\n    factory: PermissionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PermissionsService;\n})();","map":null,"metadata":{},"sourceType":"module"}