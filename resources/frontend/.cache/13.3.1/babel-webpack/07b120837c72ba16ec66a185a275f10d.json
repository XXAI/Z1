{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RegionalizacionService = /*#__PURE__*/(() => {\n  class RegionalizacionService {\n    constructor(http) {\n      this.http = http;\n      this.url = `${environment.base_url}/reginalizacion-clues`;\n      this.url_obtener_catalogos = `${environment.base_url}/catalogos`;\n      this.url_localidades = `${environment.base_url}/regionalizacion-localidades`;\n      this.url_localidad = `${environment.base_url}/catalogo-localidad`;\n      this.url_localidad_filtro = `${environment.base_url}/regionalizacion-localidades-filtro`;\n      this.url_personal = `${environment.base_url}/reginalizacion-clues-personal`;\n      this.url_buscador_personal = `${environment.base_url}/buscador-personal`;\n      this.url_transferir_personal = `${environment.base_url}/transferir-personal`;\n      this.url_clues = `${environment.base_url}/catalogo-clues`;\n      this.url_salud_filtro = `${environment.base_url}/regionalizacion-salud-filtro`;\n      this.url_personal_delete = `${environment.base_url}/delete-personal`;\n      this.url_externo_filtro = `${environment.base_url}/regionalizacion-externo-filtro`;\n    }\n\n    getCatalogos() {\n      return this.http.get(this.url_obtener_catalogos, {}).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getLocalidadesList(id, params) {\n      return this.http.get(this.url + \"/\" + id, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getFilterLocalidadesList(id, params) {\n      return this.http.get(this.url_localidad_filtro + \"/\" + id, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    buscarLocalidad(obj) {\n      return this.http.get(this.url_localidad, {\n        params: obj\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getCluesList(payload) {\n      return this.http.get(this.url, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    save(payload) {\n      return this.http.post(this.url, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    edit(id, payload) {\n      return this.http.put(this.url + \"/\" + id, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    eliminar(id) {\n      return this.http.delete(this.url + \"/\" + id).pipe(map(response => {\n        return response;\n      }));\n    } /// Regionalizacion Personal\n\n\n    getCluesPersonalList(payload) {\n      return this.http.get(this.url_personal, {\n        params: payload\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    buscarClues(obj) {\n      return this.http.get(this.url_clues, {\n        params: obj\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    buscarPersonal(params) {\n      return this.http.get(this.url_buscador_personal, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    buscarTrabajador(id, params) {\n      return this.http.get(this.url_personal + \"/\" + id, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getPersonalList(params) {\n      return this.http.get(this.url_personal, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    getFilterPersonalExternoList(id, params) {\n      return this.http.get(this.url_externo_filtro + \"/\" + id, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    eliminarPersonal(id, params) {\n      return this.http.delete(this.url_personal + \"/\" + id, {\n        params\n      }).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    savePersonal(payload) {\n      return this.http.post(this.url_personal, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    savePersonalTransferencia(payload) {\n      return this.http.post(this.url_transferir_personal, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n    editPersonal(id, payload) {\n      return this.http.put(this.url_personal + \"/\" + id, payload).pipe(map(response => {\n        return response;\n      }));\n    }\n\n  }\n\n  RegionalizacionService.ɵfac = function RegionalizacionService_Factory(t) {\n    return new (t || RegionalizacionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RegionalizacionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegionalizacionService,\n    factory: RegionalizacionService.ɵfac,\n    providedIn: 'root'\n  });\n  return RegionalizacionService;\n})();","map":null,"metadata":{},"sourceType":"module"}