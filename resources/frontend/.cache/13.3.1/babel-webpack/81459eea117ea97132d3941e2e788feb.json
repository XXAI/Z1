{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { debounceTime, finalize, switchMap, tap } from 'rxjs/operators';\nimport { MatExpansionPanel } from '@angular/material/expansion';\nimport { MatTable } from '@angular/material/table'; //import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\nimport { ConfirmActionDialogComponent } from '../../../utils/confirm-action-dialog/confirm-action-dialog.component';\nlet FormularioComponent = class FormularioComponent {\n  constructor(sharedService, regionalizacionService, dialogRef, authService, route, fb, dialog, mediaObserver, router, data) {\n    this.sharedService = sharedService;\n    this.regionalizacionService = regionalizacionService;\n    this.dialogRef = dialogRef;\n    this.authService = authService;\n    this.route = route;\n    this.fb = fb;\n    this.dialog = dialog;\n    this.mediaObserver = mediaObserver;\n    this.router = router;\n    this.data = data;\n    this.catalogo = [];\n    this.isLoading = false;\n    this.localidadIsLoading = false;\n    this.searchQuery = \"\";\n    this.id_editar = 0;\n    this.indexTab = 0;\n    this.edicion = false;\n    this.resultsLength = 0;\n    this.currentPage = 0;\n    this.pageSize = 20;\n    this.selectedItemIndex = -1;\n    this.displayedColumns = ['localidad', 'camino', 'distancia', 'actions'];\n    this.dataSource = [];\n    this.lat = 15.404130;\n    this.long = -92.655800;\n    this.latUnidad = 15.404130;\n    this.longUnidad = -92.655800;\n    this.zoom = 14;\n    this.localidades = [];\n    this.unidadMedica = {};\n    this.localidadUnidad = \"\";\n    this.tipoMicroregion = \"\";\n    this.localidadesRegionalizadas = [];\n    this.nombre_unidad = \"\"; //lineas:any = [{lat}]\n\n    this.iconMap = {\n      url: '../../assets/icons/pin_localidad.png',\n      iconHeigh: 10,\n      scaledSize: {\n        height: 20,\n        width: 15\n      }\n    };\n    this.iconUnidad = {\n      url: '../../assets/icons/UnidadSsa.png',\n      iconHeigh: 10,\n      scaledSize: {\n        height: 40,\n        width: 30\n      }\n    };\n    this.regionalizacionForm = this.fb.group({\n      'municipio_id': ['', [Validators.required]],\n      'localidad_id': ['', [Validators.required]],\n      'catalogo_tipo_camino_id': ['', [Validators.required]],\n      'distancia': ['', [Validators.required]],\n      'tiempo': ['', [Validators.required]],\n      'clues': ['', [Validators.required]]\n    });\n  }\n\n  ngOnInit() {\n    this.cargarCatalogos(); //this.loadData();\n  }\n\n  loadData(event) {\n    /*this.isLoading = true;\r\n    let params:any;\r\n    if(!event){\r\n      params = { page: 1, per_page: 20 }\r\n    }else{\r\n      params = {\r\n        page: event.pageIndex+1,\r\n        per_page: event.pageSize\r\n      };\r\n    }\r\n          params.query = this.searchQuery;\r\n          this.regionalizacionService.getLocalidadesList(this.data.clues, params).subscribe(\r\n      response =>{\r\n        this.dataSource = response.data.data;\r\n        \r\n        this.isLoading = false;\r\n      },\r\n      errorResponse =>{\r\n        var errorMessage = \"Ocurrió un error.\";\r\n        if(errorResponse.status == 409){\r\n          errorMessage = errorResponse.error.message;\r\n        }\r\n        this.sharedService.showSnackBar(errorMessage, null, 3000);\r\n        this.isLoading = false;\r\n      }\r\n    );*/\n    return event;\n  }\n\n  eliminar(obj) {\n    const dialogRef = this.dialog.open(ConfirmActionDialogComponent, {\n      width: '500px',\n      data: {\n        dialogTitle: 'ELIMINAR',\n        dialogMessage: '¿Realmente desea eliminar este registro? Escriba ACEPTAR a continuación para realizar el proceso.',\n        validationString: 'ACEPTAR',\n        btnColor: 'primary',\n        btnText: 'Aceptar'\n      }\n    });\n    dialogRef.afterClosed().subscribe(valid => {\n      if (valid) {\n        this.regionalizacionService.eliminar(obj.id).subscribe(response => {\n          this.sharedService.showSnackBar(\"Se ha Actualizado Correctamente\", null, 3000);\n          this.isLoading = false;\n          this.cargarDatos();\n        }, errorResponse => {\n          this.isLoading = false;\n          var errorMessage = \"Ocurrió un error.\";\n\n          if (errorResponse.status == 409) {\n            errorMessage = errorResponse.error.error.message;\n          }\n\n          this.sharedService.showSnackBar(errorMessage, \"ERROR\", 3000);\n        });\n      }\n    });\n  }\n\n  editar(obj) {\n    console.log(obj.catalogo_localidad.municipio.id);\n    console.log(obj.catalogo_tipo_camino.id);\n    this.regionalizacionForm.patchValue({\n      municipio_id: obj.catalogo_localidad.municipio.id,\n      localidad_id: obj.catalogo_localidad,\n      catalogo_tipo_camino_id: obj.catalogo_tipo_camino.id,\n      distancia: obj.distancia,\n      tiempo: obj.tiempo,\n      clues: obj.clues\n    });\n    this.id_editar = obj.id;\n    this.indexTab = 1;\n    this.edicion = true; //console.log(this.indexTab);\n  }\n\n  cargarDatos(event) {\n    this.isLoading = true;\n    let params;\n\n    if (!event) {\n      params = {\n        page: 1,\n        per_page: 20\n      };\n    } else {\n      params = {\n        page: event.pageIndex + 1,\n        per_page: event.pageSize\n      };\n    }\n\n    params.query = this.searchQuery; //console.log(\"entro\"+ params );\n    //console.log(this.searchQuery );\n\n    this.regionalizacionService.getFilterLocalidadesList(this.data.clues, params).subscribe(response => {\n      this.dataSource = response.data.data;\n      this.latUnidad = Number(response.clues.longitud);\n      this.longUnidad = Number(response.clues.latitud); //console.log(this.lat);\n      //console.log(this.long);\n\n      this.unidadMedica = response.clues; //console.log(this.unidadMedica);\n\n      this.tipoMicroregion = this.unidadMedica.catalogo_microrregion.descripcion + \" \" + this.unidadMedica.catalogo_microrregion.descripcion_tipo; //console.log(this.unidadMedica.catalogo_localidad);\n\n      if (this.unidadMedica.catalogo_localidad != null) {\n        this.localidadUnidad = this.unidadMedica.catalogo_localidad.clave_localidad + \" - \" + this.unidadMedica.catalogo_localidad.descripcion;\n      } else {\n        this.localidadUnidad = \"SIN SEDE\";\n      }\n\n      this.localidades = response.data.data;\n      this.localidadesRegionalizadas = [];\n      this.localidades.forEach(element => {\n        this.localidadesRegionalizadas.push({\n          lat: Number(element.catalogo_localidad.latitud),\n          long: Number(element.catalogo_localidad.longitud)\n        });\n      });\n      this.regionalizacionForm.patchValue({\n        clues: this.data.clues\n      });\n      this.isLoading = false;\n      this.resultsLength = response.data.total;\n    }, responsError => {\n      this.isLoading = false;\n      console.log(responsError);\n      this.sharedService.showSnackBar('Error al intentar recuperar datos de asistencia', null, 4000);\n    });\n    return event;\n  }\n\n  cargarCatalogos() {\n    this.regionalizacionService.getCatalogos().subscribe(response => {\n      this.catalogo = response;\n\n      if (this.data.clues != null) {\n        this.cargarDatos();\n      }\n    }, responsError => {\n      console.log(responsError);\n      this.sharedService.showSnackBar('Error al intentar recuperar datos de asistencia', null, 4000);\n    });\n    this.regionalizacionForm.get('localidad_id').valueChanges.pipe(debounceTime(300), tap(() => {\n      this.localidadIsLoading = true;\n    }), switchMap(value => {\n      if (!(typeof value === 'object')) {\n        this.localidadIsLoading = false;\n        let municipio = this.regionalizacionForm.get('municipio_id').value;\n        return this.regionalizacionService.buscarLocalidad({\n          query: value,\n          municipio_id: municipio\n        }).pipe(finalize(() => this.localidadIsLoading = false));\n      } else {\n        this.localidadIsLoading = false;\n        return [];\n      }\n    })).subscribe(items => this.filteredLocalidad = items);\n  }\n\n  displayLocalidadFn(item) {\n    if (item) {\n      return item.descripcion;\n    }\n  }\n\n  applyFilter() {\n    this.cargarDatos();\n  }\n\n  cancelar() {\n    this.edicion = false;\n    this.id_editar = 0;\n    this.regionalizacionForm.reset();\n  }\n\n  cerrar() {\n    this.dialogRef.close(true);\n  }\n\n  cleanSearch() {\n    this.searchQuery = '';\n  }\n\n  accionGuardar(id) {\n    if (this.id_editar != 0) {\n      this.regionalizacionService.edit(this.id_editar, this.regionalizacionForm.value).subscribe(response => {\n        //this.dialogRef.close(true);\n        this.sharedService.showSnackBar(\"Se ha guardado el registro\", null, 3000);\n        this.id_editar = 0;\n        this.edicion = false;\n        this.regionalizacionForm.reset();\n        this.cargarDatos();\n        this.indexTab = 0;\n      }, responsError => {\n        console.log(responsError);\n        this.sharedService.showSnackBar('Error al intentar recuperar datos de asistencia', null, 4000);\n      });\n    } else {\n      this.regionalizacionService.save(this.regionalizacionForm.value).subscribe(response => {\n        //this.dialogRef.close(true);\n        this.regionalizacionForm.reset();\n        this.cargarDatos();\n        this.sharedService.showSnackBar(\"Se ha guardado el registro\", null, 3000);\n        this.indexTab = 0;\n      }, responsError => {\n        console.log(responsError);\n        this.sharedService.showSnackBar('Error al intentar recuperar datos de asistencia', null, 4000);\n      });\n    }\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator)], FormularioComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild(MatTable)], FormularioComponent.prototype, \"usersTable\", void 0);\n\n__decorate([ViewChild(MatExpansionPanel)], FormularioComponent.prototype, \"advancedFilter\", void 0);\n\nFormularioComponent = __decorate([Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css']\n}), __param(9, Inject(MAT_DIALOG_DATA))], FormularioComponent);\nexport { FormularioComponent };","map":null,"metadata":{},"sourceType":"module"}