{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../shared/jwt.service\";\nimport * as i4 from \"../../shared/shared.service\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/progress-spinner\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/button\";\n\nfunction UpdatePasswordComponent_div_1_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction UpdatePasswordComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_div_1_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoading);\n  }\n}\n\nfunction UpdatePasswordComponent_mat_error_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"El campo es obligatorio y debe ser un Correo Electr\\u00F3nico.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_mat_error_16_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.updatePwd.get(\"email\").errors.required);\n  }\n}\n\nfunction UpdatePasswordComponent_mat_error_25_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"La nueva Contrase\\u00F1a es obligatoria.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_mat_error_25_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.updatePwd.get(\"password\").errors.required);\n  }\n}\n\nfunction UpdatePasswordComponent_mat_error_33_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"La Confirmaci\\u00F3n de la nueva Contrase\\u00F1a es obligatoria.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_mat_error_33_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.updatePwd.get(\"password_confirmation\").errors.required);\n  }\n}\n\nexport let UpdatePasswordComponent = /*#__PURE__*/(() => {\n  class UpdatePasswordComponent {\n    constructor(fb, activatedRoute, authService, sharedService, router) {\n      this.fb = fb;\n      this.activatedRoute = activatedRoute;\n      this.authService = authService;\n      this.sharedService = sharedService;\n      this.router = router;\n      this.errors = null;\n      this.isLoading = false;\n      this.confirmPasword = '';\n      this.hidePassword = true;\n      this.hidePasswordConfirm = true;\n      this.updatePwd = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]],\n        password_confirmation: ['', [Validators.required]],\n        passwordToken: ['']\n      });\n      activatedRoute.queryParams.subscribe(params => {\n        this.updatePwd.controls['passwordToken'].setValue(params['token']);\n      });\n    }\n\n    ngOnInit() {}\n\n    updatePassword() {\n      this.isLoading = true;\n      this.authService.updatePassword(this.updatePwd.value).subscribe(result => {\n        this.isLoading = false;\n        this.sharedService.showSnackBar('¡La contraseña se actualizo Correctamente! del usuario con el Correo:' + ' ' + this.updatePwd.value.email, 'Cerrar', 4000);\n        this.updatePwd.reset();\n        this.router.navigate(['/login']); //console.log(this.updatePwd.value)\n      }, error => {\n        this.isLoading = false;\n        this.handleError(error);\n      });\n    }\n\n    handleError(error) {\n      let errorMsg = '';\n\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Error: ${error.error.message}`; //console.log(\"mensajeeee error\", errorMsg);\n\n        this.sharedService.showSnackBar('Error, verifique sus datos', 'Cerrar', 4000);\n      } else {\n        errorMsg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        this.sharedService.showSnackBar('Error, verifique sus datos', 'Cerrar', 4000);\n      }\n\n      return throwError(errorMsg);\n    }\n\n  }\n\n  UpdatePasswordComponent.ɵfac = function UpdatePasswordComponent_Factory(t) {\n    return new (t || UpdatePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.JwtService), i0.ɵɵdirectiveInject(i4.SharedService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  UpdatePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatePasswordComponent,\n    selectors: [[\"app-update-password\"]],\n    decls: 41,\n    vars: 14,\n    consts: [[\"fxLayout\", \"\", \"fxLayoutAlign\", \"center center\", 1, \"form-container;\", \"update-pass\"], [\"class\", \"form-loading-shade\", 4, \"ngIf\"], [\"fxLayout\", \"\", \"fxLayoutAlign\", \"center center\"], [\"fxFlex.xs\", \"100%\", \"fxFlex\", \"500px\"], [\"fxLayoutAlign\", \"center\"], [\"fxLayout\", \"column\", \"fxLayout\", \"\", \"fxLayoutAlign\", \"center center\"], [3, \"formGroup\"], [\"fxLayoutAlign\", \"center\", 2, \"font-weight\", \"bold\"], [\"fxLayout.gt-sm\", \"row\", \"fxLayout\", \"column\", \"fxLayoutGap.gt-sm\", \"10px\"], [\"fxFlex\", \"\", \"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"matSuffix\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Contrase\\u00F1a\", \"cdkFocusInitial\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Confirmar Contrase\\u00F1a\", \"cdkFocusInitial\", \"\", \"formControlName\", \"password_confirmation\", 3, \"type\"], [\"fxFlex\", \"300px\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"fxLayout\", \"column\", \"fxAlignItems\", \"center\", \"fxLayoutGap\", \"10px\"], [1, \"form-loading-shade\"]],\n    template: function UpdatePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵtemplate(1, UpdatePasswordComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"mat-card\", 3);\n        i0.ɵɵelement(4, \"mat-card-title\", 4);\n        i0.ɵɵelementStart(5, \"mat-card-content\", 5)(6, \"form\", 6)(7, \"h1\", 7);\n        i0.ɵɵtext(8, \"Actualizar Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"mat-form-field\", 9)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵelementStart(14, \"mat-icon\", 11);\n        i0.ɵɵtext(15, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, UpdatePasswordComponent_mat_error_16_Template, 2, 1, \"mat-error\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 8)(18, \"mat-form-field\", 9)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Nueva Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementStart(22, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function UpdatePasswordComponent_Template_button_click_22_listener() {\n          return ctx.hidePassword = !ctx.hidePassword;\n        });\n        i0.ɵɵelementStart(23, \"mat-icon\");\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, UpdatePasswordComponent_mat_error_25_Template, 2, 1, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 9)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Confirmar Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 15);\n        i0.ɵɵelementStart(30, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function UpdatePasswordComponent_Template_button_click_30_listener() {\n          return ctx.hidePasswordConfirm = !ctx.hidePasswordConfirm;\n        });\n        i0.ɵɵelementStart(31, \"mat-icon\");\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(33, UpdatePasswordComponent_mat_error_33_Template, 2, 1, \"mat-error\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementStart(35, \"div\", 4)(36, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function UpdatePasswordComponent_Template_button_click_36_listener() {\n          return ctx.updatePassword();\n        });\n        i0.ɵɵtext(37, \"Actualizar Contrase\\u00F1a \");\n        i0.ɵɵelementStart(38, \"mat-icon\", 11);\n        i0.ɵɵtext(39, \"password\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(40, \"mat-card-actions\", 17);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.updatePwd);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.updatePwd.get(\"email\").invalid && (ctx.updatePwd.get(\"email\").dirty || ctx.updatePwd.get(\"email\").touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hidePassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hidePassword ? \"lock\" : \"lock_open\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updatePwd.get(\"password\").invalid && (ctx.updatePwd.get(\"password\").dirty || ctx.updatePwd.get(\"password\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.hidePasswordConfirm ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hidePasswordConfirm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hidePasswordConfirm ? \"vpn_key\" : \"lock_open\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updatePwd.get(\"password_confirmation\").invalid && (ctx.updatePwd.get(\"password_confirmation\").dirty || ctx.updatePwd.get(\"password_confirmation\").touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.updatePwd.valid || ctx.isLoading);\n      }\n    },\n    directives: [i5.DefaultLayoutDirective, i5.DefaultLayoutAlignDirective, i6.NgIf, i7.MatSpinner, i8.MatCard, i5.DefaultFlexDirective, i8.MatCardTitle, i8.MatCardContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.DefaultLayoutGapDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i11.MatIcon, i9.MatSuffix, i9.MatError, i12.MatButton, i8.MatCardActions],\n    styles: [\".form-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}.form-loading-shade[_ngcontent-%COMP%]{position:absolute;top:0;left:0;bottom:0;right:0;background:rgba(0,0,0,.15);z-index:1;display:flex;align-items:center;justify-content:center}.update-pass[_ngcontent-%COMP%]{min-height:100%;background:url(bg-d.jpg) no-repeat center center fixed;background-size:cover;color:#fff;text-align:center;padding:30px}\"]\n  });\n  return UpdatePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}